name: CI Pipeline

on:
  push:
    branches:
      - feature/devsecops-movies-pipeline-rodrigoorellana

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: yarn install

    - name: Run build
      run: yarn build

  sast:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: yarn install

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        check-latest: true

    - name: Install sonar-scanner
      run: |
        curl -Lo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
        unzip sonar-scanner.zip
        mv sonar-scanner-4.6.2.2472-linux sonar-scanner

    - name: Build project
      run: yarn build

    - name: Run SonarQube analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        JAVA_HOME: /opt/hostedtoolcache/Java_Adopt_jdk/17.0.1-12/x64
      run: |
        sonar-scanner/bin/sonar-scanner \
        -Dsonar.projectKey=devops-v7_Laboratorio-final \
        -Dsonar.organization=devops-v7 \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
        -Dsonar.branch.name=${{ github.ref_name }}

    - name: Validate Quality Gate
      run: |
        idanalisis=$(curl -s -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/ce/component?component=devops-v7_Laboratorio-final')
        idanalisisParse=$(echo "$idanalisis" | jq .current.analysisId | sed -e 's/^"//' -e 's/"$//')

        qualitygate=$(curl -s -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/qualitygates/project_status?analysisId=$idanalisisParse')
        qualitygateStatus=$(echo "$qualitygate" | jq .projectStatus.status | sed -e 's/^"//' -e 's/"$//')

        if [ "$qualitygateStatus" == "OK" ]; then
          echo "Project passes the quality gate"
          exit 0
        else
          echo "Project does not pass the quality gate"
          exit 1
