name: CI Pipeline

on:
  push:
    branches:
      - feature/devsecops-movies-pipeline-rodrigoorellana

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: yarn install

    - name: Run build
      run: yarn build

  sast:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: yarn install

    - name: Validate project on SonarCloud
      id: validateProjectOnSonar
      run: |
        set +e
        curl -f -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/projects/create' -d 'name=${{ github.event.repository.name }}' -d 'project=${{ github.event.repository.name }}' -d 'organization=devops-v7' -d 'visibility=public'
        if [ $? -ne 0 ]
        then
          echo "Project already exists on SonarCloud"
        else
          echo "Project ${{ github.event.repository.name }} was successfully created on SonarCloud"
          echo "Setting main branch as default"
          curl -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/project_branches/rename' -d 'name=main' -d 'project=${{ github.event.repository.name }}'
        fi

    - name: Install sonar-scanner
      run: |
        yarn add global sonar-scanner

    - name: Build project
      run: yarn build

    - name: Run SonarCloud analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        npx sonar-scanner \
          -Dsonar.projectKey=devops-v7_Laboratorio-final \
          -Dsonar.organization=devops-v7 \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.branch.name=${{ github.ref_name }}

    - name: Validate Quality Gate
      run: |
        idanalisis=$(curl -s -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/ce/component?component=devops-v7_Laboratorio-final')
        idanalisisParse=$(echo "$idanalisis" | jq .current.analysisId | sed -e 's/^"//' -e 's/"$//')

        qualitygate=$(curl -s -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/qualitygates/project_status?analysisId=$idanalisisParse')
        qualitygateStatus=$(echo "$qualitygate" | jq .projectStatus.status | sed -e 's/^"//' -e 's/"$//')

        if [ "$qualitygateStatus" == "OK" ]; then
          echo "Project passes the quality gate"
          exit 0
        else
          echo "Project does not pass the quality gate"
          exit 1
